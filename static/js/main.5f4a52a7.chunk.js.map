{"version":3,"sources":["Components/PokemonComponent.jsx","App.js","reportWebVitals.js","index.js"],"names":["PokemonComponent","useState","pokemonName","setPokemonName","notFound","setNotFound","isLoading","setIsLoading","results","setResults","sprites","setSprites","url","toLowerCase","useEffect","a","fetch","catch","e","console","warn","res","status","ok","json","data","log","fetchData","Fragment","type","placeholder","autoFocus","onKeyPress","charCode","target","value","handleEvent","src","front_default","alt","back_default","App","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2PAqEeA,MAnEf,WAA6B,IAAD,EACWC,mBAAS,SADpB,mBACpBC,EADoB,KACPC,EADO,OAEKF,oBAAS,GAFd,mBAEpBG,EAFoB,KAEVC,EAFU,OAGOJ,oBAAS,GAHhB,mBAGpBK,EAHoB,KAGTC,EAHS,OAIGN,mBAAS,IAJZ,mBAIpBO,EAJoB,KAIXC,EAJW,OAKGR,mBAAS,IALZ,mBAKpBS,EALoB,KAKXC,EALW,KAMrBC,EAAG,4CAAwCV,EAAYW,eA8B7D,OA5BAC,qBAAU,YACM,uCAAG,8BAAAC,EAAA,yDACG,KAAhBb,EADa,wDAEjBK,GAAa,GAFI,SAGCS,MAAMJ,GAAKK,OAAM,SAAAC,GAAC,OAAIC,QAAQC,KAAKF,MAHpC,UAKE,OAFbG,EAHW,QAKTC,SAA6B,IAAXD,EAAIE,GALb,iBAMhBlB,GAAY,GANI,yCAQGgB,EAAIG,OARP,QAQVC,EARU,OAShBhB,EAAWD,GACXG,EAAWc,EAAKf,SAChBL,GAAY,GACZc,QAAQO,IAAID,GAZI,QAejBlB,GAAa,GAfI,4CAAH,qDAkBfoB,KACE,CAACf,IASH,8BACEN,EACA,yCAEA,eAAC,IAAMsB,SAAP,WACC,uBACCC,KAAK,OACLC,YAAY,kBACZC,WAAS,EAETC,WAAY,SAAAd,GAAC,OAjBE,SAAAA,GACA,KAAfA,EAAEe,UACL9B,EAAee,EAAEgB,OAAOC,OAeJC,CAAYlB,MAE9B,uBACCd,EACA,gEAEA,qCACC,6CACA,qBAAKiC,IAAK3B,EAAQ4B,cAAeC,IAAI,QACrC,uBACA,4CACA,qBAAKF,IAAK3B,EAAQ8B,aAAcD,IAAI,iBChD5BE,MATf,WACE,OACE,sBAAKC,UAAU,MAAf,UACE,6CACA,cAAC,EAAD,QCKSC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.5f4a52a7.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\n\r\nfunction PokemonComponent() {\r\n\tconst [pokemonName, setPokemonName] = useState(\"ditto\");\r\n\tconst [notFound, setNotFound] = useState(false);\r\n\tconst [isLoading, setIsLoading] = useState(true);\r\n\tconst [results, setResults] = useState({});\r\n\tconst [sprites, setSprites] = useState({});\r\n\tconst url = `https://pokeapi.co/api/v2/pokemon/${pokemonName.toLowerCase()}`;\r\n\r\n\tuseEffect(() => {\r\n\t\tconst fetchData = async () => {\r\n\t\t\tif (pokemonName === \"\") return;\r\n\t\t\tsetIsLoading(true);\r\n\t\t\tconst res = await fetch(url).catch(e => console.warn(e));\r\n\r\n\t\t\tif (res.status !== 200 || res.ok !== true) {\r\n\t\t\t\tsetNotFound(true);\r\n\t\t\t} else {\r\n\t\t\t\tconst data = await res.json();\r\n\t\t\t\tsetResults(results);\r\n\t\t\t\tsetSprites(data.sprites);\r\n\t\t\t\tsetNotFound(false);\r\n\t\t\t\tconsole.log(data);\r\n\t\t\t}\r\n\t\t\t// console.log(res);\r\n\t\t\tsetIsLoading(false);\r\n\t\t};\r\n\r\n\t\tfetchData();\r\n\t}, [url]);\r\n\r\n\tconst handleEvent = e => {\r\n\t\tif (e.charCode === 13) {\r\n\t\t\tsetPokemonName(e.target.value);\r\n\t\t}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t{isLoading ? (\r\n\t\t\t\t<h1>Loading</h1>\r\n\t\t\t) : (\r\n\t\t\t\t<React.Fragment>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\tplaceholder=\"Enter a pokemon\"\r\n\t\t\t\t\t\tautoFocus\r\n\t\t\t\t\t\t// onChange={e => setPokemonName(e.target.value)}\r\n\t\t\t\t\t\tonKeyPress={e => handleEvent(e)}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<br />\r\n\t\t\t\t\t{notFound ? (\r\n\t\t\t\t\t\t<h3>Not Found, Enter Valid pokemon</h3>\r\n\t\t\t\t\t) : (\r\n\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t<p>Front Image:</p>\r\n\t\t\t\t\t\t\t<img src={sprites.front_default} alt=\"pic\" />\r\n\t\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t\t<p>Back Image:</p>\r\n\t\t\t\t\t\t\t<img src={sprites.back_default} alt=\"pic\" />\r\n\t\t\t\t\t\t</>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</React.Fragment>\r\n\t\t\t)}\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default PokemonComponent;\r\n","import './App.css';\nimport PokemonComponent from './Components/PokemonComponent';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <h1>Pokemon Api</h1>\n      <PokemonComponent/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}